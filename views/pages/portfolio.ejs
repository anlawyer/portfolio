<!DOCTYPE html>
<html>
<head>
  <% include ../partials/head %>
</head>
<body>
  <section class="hero is-fullheight is-default is-bold">
    <% include ../partials/header %>
    <div class="hero-body">
      <div class="container">
        <div class="columns is-multiline">
          <div class="column is-12">
            <div class="title is-3">
              <strong>Full stack apps and projects:</strong>
            </div>
          </div>
          <!-- gotta go 2.0 -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/gg2-landing.png">
                </figure>
              </div>
              <div class="card-content">
                <h3 class="title is-4">Gotta Go - React Refactor</h3>
                <div class="content">
                  <p>
                    This application is a React-based mobile web application, a refactor
                    of the previous group project by the same name. Its purpose
                    is to crowdsource local restrooms for frequent drivers and busy people
                    on the go. Users can see local restrooms, signed in members can add comments
                    and new restrooms they find. This application was built using React
                    and MongoDB/mLab, as well as Node.js and Express. The front end was
                    constructed using Redux, Bulma, HTML/JSX/CSS, and Bloomer, a library of
                    stateless React components. It utilizes API calls to the MongoDB/mLab
                    database to post and retrieve restrooms and comments. Redux is used for
                    loading the Google Map according to the user's location. By making calls
                    to the Google Maps API, users can also get directions to their restroom
                    of choice. The application is still in development.
                  </p>
                  <a href="https://gotta-go.herokuapp.com/">Live app</a> |
                  <a href="https://github.com/mford008/gotta-go-react">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <!-- gotta go 1.0 -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/GottaGo-landing.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">Gotta Go!</h4>
                <div class="content">
                  <p>
                    A crowdsourced application that provides drivers with location and
                    information about nearby bathrooms that other users have input. This
                    app was created as a group project for the UC Berkeley Extension
                    Coding Bootcamp. My role in the group was to create user stories for
                    each page in the app, and design the wireframe and interactions for
                    each story. I helped set up and maintain the MySQL database, and
                    wrote routes for the flow of data from the frontend to the backend
                    of application, including user data and location data.
                    This is a full stack application using Node.js, Express.js, MySQL,
                    Sequelize, Bulma, EJS, HTML, JavaScript and jQuery.
                  </p>
                  <a href="https://murmuring-basin-97486.herokuapp.com">Live app</a> |
                  <a href="https://github.com/anlawyer/GottaGo">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <!-- NYT Search -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/nyt-search.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">NYT Article Search</h4>
                <div class="content">
                  <p>
                    An application that searches for articles from the New York Times.
                    Users can search for a topic, and can save and delete articles.
                    I used Axios for in-app routing and for calling the NYT API to search
                    for articles, MongoDB and Mongoose for storage/deletion of saved articles,
                    and React and Bootstrap for the frontend. This is a MERN app.
                  </p>
                  <a href="https://stark-caverns-91687.herokuapp.com/">Live app</a> |
                  <a href="https://github.com/anlawyer/NYT-Article-Search">Source code</a>
                </div>
              </div>
            </div>
            <br />
          <!-- </div> -->
          <!-- FastCo scraper -->
          <!-- <div class="column is-4 is-offset-2"> -->
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/fc-landing.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">Fast Co. Article Scraper</h4>
                <div class="content">
                  <p>
                    An application that scrapes articles from fastcompany.com and allows
                    users to save and comment on them. I used Cheerio and Axios to scrape
                    the Fast Company website, and MongoDB/Mongoose to store all scraped
                    articles, saved articles, and comments. I used Bulma and Handlebars.js
                    for front-end. A full stack application using Node.js, Express.js,
                    MongoDB, Bulma, Handlebars.js, JavaScript, Cheerio and Axios.
                  </p>
                  <a href="https://shielded-coast-38911.herokuapp.com/">Live app</a> |
                  <a href="https://github.com/anlawyer/FastCo-Scraper">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <div class="column is-12">
            <div class="title is-3">
              <strong>Fun web-based apps and games:</strong>
            </div>
          </div>
          <!-- FriendFinder -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/FriendFinder-questions.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">Friend Finder</h4>
                <div class="content">
                  <p>
                    Friend Finder is a full-stack application using Node.js, Express.js
                    and Bootstrap. Users take a survey and are matched to a user who has
                    also taken the survey through an algorithm that finds the least amount of
                    difference between their answers.
                  </p>
                  <a href="https://lit-depths-81807.herokuapp.com/">Live app</a> |
                  <a href="https://github.com/anlawyer/FriendFinder">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <!-- trivia -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/Trivia.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">The Office Trivia</h4>
                <div class="content">
                  <p>
                    This is a "The Office"-themed trivia game. It's a front-end only app and
                    uses HTML5, Bootstrap, Javascript, jQuery - and a timer for added suspense.
                  </p>
                  <a href="https://anlawyer.github.io/TriviaGame/">Live app</a> |
                  <a href="https://github.com/anlawyer/TriviaGame">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <!-- GifTastic -->
          <div class="column is-4">
            <div class="card">
              <div class="card-image">
                <figure class="image">
                  <img src="../../images/GifTastic-buttons.png">
                </figure>
                <figure class="image">
                  <img src="../../images/GifTastic-gifs.png">
                </figure>
              </div>
              <div class="card-content">
                <h4 class="title is-4">GifTastic</h4>
                <div class="content">
                  <p>
                    GifTastic is a front-end application that uses the Giphy API to
                    display gifs on the click of a button, and is built with HTML5,
                    Bootstrap, Javascript, and jQuery. The user is able to add buttons
                    of any topic, and click on each gif to start it playing and stop it playing.
                  </p>
                  <a href="https://anlawyer.github.io/GifTastic/">Live app</a> |
                  <a href="https://github.com/anlawyer/GifTastic">Source code</a>
                </div>
              </div>
            </div>
          </div>
          <!-- closing columns -->
          </div>
        <!-- closing container -->
        </div>
      <!-- closing hero-body -->
      </div>
    <% include ../partials/footer %>
  </section>
  <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
  <script async type="text/javascript" src="../../js/bulma.js"></script>
</body>
</html>
