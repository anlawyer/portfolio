<!DOCTYPE html>
<html>
<head>
  <% include ../partials/head %>
</head>
<body>
  <section class="hero is-fullheight is-default is-bold">
    <% include ../partials/header %>
    <div class="hero-body">
      <div class="container">
        <div class="columns is-multiline">
          <!-- gotta go -->
          <div class="column is-2">
            <figure class="image">
              <img src="../../images/GottaGo-landing.png">
            </figure>
          </div>
          <div class="column is-2">
            <figure class="image">
              <img src="../../images/GottaGo-tiles.png">
            </figure>
          </div>
          <div class="column is-6 is-offset-1">
            <h3 class="title is-3">Gotta Go!</h3>
            <p>
              A crowdsourced application that provides drivers with location and
              information about nearby bathrooms that other users have input.
              I created user stories for each page in the app, and designed the
              wireframe and interactions for each story. I helped set up and maintain
              the MySQL database, and wrote routes for the flow of data from the
              frontend to the backend of application, including user data and location data.
              This is a full stack application using Node.js, Express.js, MySQL,
              Sequelize, Bulma, EJS, HTML, JavaScript and jQuery.
            </p>
            <br>
            <a href="https://murmuring-basin-97486.herokuapp.com">Live app</a> |
            <a href="https://github.com/anlawyer/project2">Source code</a>
          </div>
          <!-- NYT Search -->
          <div class="column is-4">
            <figure class="image">
              <img src="../../images/nyt-search.gif">
            </figure>
          </div>
          <div class="column is-6 is-offset-1">
            <h3 class="title is-3">NYT Article Search</h3>
            <p>An application that searches for articles from NYT.
              Users can search for a topic, and can save and delete articles.
              I used Axios for in-app routing and for calling the NYT API to search
              for articles, MongoDB and Mongoose for storage/deletion of saved articles,
              and React and Bootstrap for the front-end. This is a MERN app.
            </p>
            <br>
            <a href="https://stark-caverns-91687.herokuapp.com/">Live app</a> |
            <a href="https://github.com/anlawyer/NYT-Article-Search">Source code</a>
          </div>
          <!-- FastCo scraper -->
          <div class="column is-4">
            <figure class="image">
              <img src="../../images/fc-screencast.gif">
            </figure>
          </div>
          <div class="column is-6 is-offset-1">
            <h3 class="title is-3">Fast Co Article Scraper</h3>
            <p>
              An application that scrapes articles from fastcompany.com and allows
              users to save and comment on them. Used Cheerio and Axios to scrape
              the Fast Company website. Used MongoDB and Mongoose to store all scraped
              articles, saved articles, and comments. Used Bulma and Handlebars.js
              for frontend interaction. A full stack application using Node.js,
              Express.js, MongoDB, Bulma, Handlebars.js, JavaScript, Cheerio and Axios.
            </p>
            <br>
            <a href="https://lit-depths-81807.herokuapp.com/">Live app</a> |
            <a href="https://github.com/anlawyer/FriendFinder">Source code</a>
          </div>
          <!-- Bamazon -->
          <!-- <div class="column is-2 is-offset-1">
            <figure class="image">
              <img src="../../images/Bamazon.png">
            </figure>
          </div>
          <div class="column is-6 is-offset-2">
            <h3 class="title is-3">Bamazon</h3>
            <p>Bamazon is a backend command line application using Node.js, MySQL and
              the Inquirer NPM package. It functions as a store-front, showing customers
              available products and allowing them to "purchase" and deplete the stock.
              It also allows managers to view all products and inventory, and update
              the stock. The database is updated using CRUD operations.
            </p>
            <br>
            <a href="https://github.com/anlawyer/bamazon/">Source code</a>
          </div> -->
          <!-- GifTastic -->
          <!-- <div class="column is-4 is-offset-1">
            <figure class="image">
              <img src="../../images/GifTastic-gifs.png">
            </figure>
          </div>
          <div class="column is-6">
            <h3 class="title is-3">GifTastic</h3>
            <p>GifTastic is a front-end application that uses the Giphy API to
              display gifs on the click of a button. The user is able to add buttons
              of any topic, and click on each gif to start it playing and stop it playing.
            </p>
            <br>
            <a href="https://anlawyer.github.io/GifTastic/">Live app</a> |
            <a href="https://github.com/anlawyer/GifTastic">Source code</a>
          </div> -->
          <!-- closing columns -->
          </div>
        <!-- closing container -->
        </div>
      <!-- closing hero-body -->
      </div>
    <% include ../partials/footer %>
  </section>
  <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
  <script async type="text/javascript" src="../../js/bulma.js"></script>
</body>
</html>
